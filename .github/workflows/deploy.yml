name: Deploy React App to Kubernetes with ArgoCD

on:
  push:
    branches:
      - main  # Change if using another branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js & Build React App
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Clean Cache and Install Dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps

      - name: Manually Install ajv if needed
        run: npm install ajv ajv-keywords --save-dev

      - name: Build React App
        run: npm run build

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build -t yaswanthkumar12/react-app:latest .
          docker push yaswanthkumar12/react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Kubernetes Config
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

      - name: Sync ArgoCD Application
        run: argocd app sync react-app
